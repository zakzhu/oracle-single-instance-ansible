---
- name: <r_mount_points_t_common> mount up data volumes
  mount:
    path: "{{ v.point }}"
    src: "LABEL={{ v.volume }}"
    fstype: xfs
    #opts:

    # If `mounted', the device will be actively mounted and
    # appropriately configured in `fstab'. If the mount point is not
    # present, the mount point will be created.
    #
    # If `unmounted', the device will be unmounted without changing `fstab'.
    #
    # `present' only specifies that the device is to be configured
    # in `fstab' and does not trigger or require a mount.
    #
    # `absent' specifies that the device mount's entry will be
    # removed from `fstab' and will also unmount the device and
    # remove the mount point.
    #
    # `remounted' specifies that the device will be remounted for
    # when you want to force a refresh on the mount itself (added in
    # 2.9). This will always return changed=true.
    #
    # Choices: absent, mounted, present, unmounted, remounted
    state: mounted
  loop: "{{ mount_map | dict2items }}"
  vars:
    v: "{{ item.value }}"

- name: <r_mount_points_t_common> change mount points permission
  file:
    path: "{{ v.point }}"
    state: directory
    owner: oracle
    group: oinstall
    mode: "0775"
  loop: "{{ mount_map | dict2items }}"
  loop_control:
    label: "{{ v.point }}"
  vars:
    v: "{{ item.value }}"
